/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.pcstore.view;
import com.k33ptoo.components.*;
import com.pcstore.controller.PurchaseOrderController;
import com.pcstore.model.Employee;
import com.pcstore.model.Supplier;
import com.pcstore.utils.LocaleManager;
import com.pcstore.utils.TextFieldSearch;

import java.awt.*;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.util.List;
import java.util.Properties;

import javax.swing.*;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
/**
 *
 * @author nloc2
 */
public class PurchaseOrderForm extends JDialog {
    private PurchaseOrderController controller;

    /**
     * Creates new form WareHouseMNM
     */
    public PurchaseOrderForm() {
        super();
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public PurchaseOrderForm(Frame parent, boolean modal, Connection connection) {
    super(parent, modal);
    initComponents();
    setLocationRelativeTo(null);
    setResizable(false);
    setTitle("Phiếu Nhập Hàng");
    setDefaultCloseOperation(DISPOSE_ON_CLOSE);

    setupTableColumns();

    // Khởi tạo controller
    controller = new PurchaseOrderController(this, connection);
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new com.k33ptoo.components.KGradientPanel();
        jPanel1 = new javax.swing.JPanel();
        textFieldSearch1 = new com.pcstore.utils.TextFieldSearch();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ProductTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        SelectedProduct = new javax.swing.JTable();
        btnStockIn = new com.k33ptoo.components.KButton();
        jLabel4 = new javax.swing.JLabel();
        txtTotalPrice = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1050, 680));
        setResizable(false);

        kGradientPanel1.setkFillBackground(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(textFieldSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(282, 282, 282))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textFieldSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/pcstore/resources/vi_VN"); // NOI18N
        jLabel1.setText(bundle.getString("lbPurchaseOrderId")); // NOI18N

        jTextField2.setText(bundle.getString("txtPurchaseOrderID")); // NOI18N
        jTextField2.setEnabled(false);

        jLabel3.setText(bundle.getString("lbEmloyeesCreate")); // NOI18N

        jTextField4.setText(bundle.getString("txtEmloyeesCreate")); // NOI18N
        jTextField4.setEnabled(false);

        ProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã Máy", "Tên Máy", "Nhà Cung Cấp", "Đơn Giá", "Xác Nhận"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ProductTable);
        if (ProductTable.getColumnModel().getColumnCount() > 0) {
            ProductTable.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("clProductID")); // NOI18N
            ProductTable.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("clProductName")); // NOI18N
            ProductTable.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("clPrice")); // NOI18N
        }

        SelectedProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã Máy", "Tên Máy", "Nhà Cung Cấp", "Số Lượng", "Đơn Giá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(SelectedProduct);
        if (SelectedProduct.getColumnModel().getColumnCount() > 0) {
            SelectedProduct.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("clProductID")); // NOI18N
            SelectedProduct.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("clProductName")); // NOI18N
            SelectedProduct.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("clQuantity")); // NOI18N
            SelectedProduct.getColumnModel().getColumn(4).setHeaderValue(bundle.getString("clPrice")); // NOI18N
        }

        btnStockIn.setText(bundle.getString("btnStockIn")); // NOI18N
        btnStockIn.setkBorderRadius(40);
        btnStockIn.setkHoverEndColor(new java.awt.Color(102, 153, 255));
        btnStockIn.setkHoverForeGround(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText(bundle.getString("lbTotalMoney")); // NOI18N

        txtTotalPrice.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtTotalPrice.setForeground(new java.awt.Color(255, 51, 51));
        txtTotalPrice.setText(bundle.getString("lbTotalPrice")); // NOI18N

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(kGradientPanel1Layout.createSequentialGroup()
                            .addGap(35, 35, 35)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnStockIn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(105, 105, 105))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnStockIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 955, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void setupTableColumns() {
        // Đảm bảo ComboBox cho cột nhà cung cấp được khởi tạo đúng
        JComboBox<Supplier> supplierComboBox = new JComboBox<>();
        ProductTable.getColumnModel().getColumn(2).setCellEditor(new DefaultCellEditor(supplierComboBox));
        
        // Cài đặt buttons cho cột xác nhận (cột 4 hoặc 5 tùy vào thiết kế của bạn)
        int confirmColumnIndex = 4; // Điều chỉnh index này tùy thuộc vào thiết kế của bạn
        ProductTable.getColumnModel().getColumn(confirmColumnIndex).setCellRenderer(new ButtonRenderer());
        ProductTable.getColumnModel().getColumn(confirmColumnIndex).setCellEditor(new ButtonEditor());
    }
    private class ButtonRenderer extends JPanel implements TableCellRenderer {
    private JButton acceptButton = new JButton("✓");
    private JButton rejectButton = new JButton("✕");

    public ButtonRenderer() {
        setLayout(new FlowLayout(FlowLayout.CENTER, 5, 0));
        acceptButton.setFocusPainted(false);
        rejectButton.setFocusPainted(false);
        
        // Styling các nút
        acceptButton.setBackground(new java.awt.Color(0, 153, 0));
        acceptButton.setForeground(java.awt.Color.WHITE);
        rejectButton.setBackground(new java.awt.Color(255, 51, 51));
        rejectButton.setForeground(java.awt.Color.WHITE);
        
        add(acceptButton);
        add(rejectButton);
    }

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        return this;
    }
}
private class ButtonEditor extends AbstractCellEditor implements TableCellEditor {
    private JPanel panel = new JPanel();
    private JButton acceptButton = new JButton("✓");
    private JButton rejectButton = new JButton("✕");
    private int clickedRow;

    public ButtonEditor() {
        panel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 0));
        
        // Styling các nút
        acceptButton.setBackground(new java.awt.Color(0, 153, 0));
        acceptButton.setForeground(java.awt.Color.WHITE);
        rejectButton.setBackground(new java.awt.Color(255, 51, 51));
        rejectButton.setForeground(java.awt.Color.WHITE);
        
        acceptButton.setFocusPainted(false);
        rejectButton.setFocusPainted(false);
        
        panel.add(acceptButton);
        panel.add(rejectButton);

        // Xử lý sự kiện khi nhấn nút tích
        acceptButton.addActionListener(e -> {
            // Kiểm tra xem đã chọn nhà cung cấp chưa
            Object supplier = ProductTable.getValueAt(clickedRow, 2);
            if (supplier == null || !(supplier instanceof Supplier)) {
                JOptionPane.showMessageDialog(PurchaseOrderForm.this, 
                    "Vui lòng chọn nhà cung cấp trước khi thêm sản phẩm", 
                    "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Gọi đến controller để xử lý việc thêm sản phẩm vào giỏ hàng
            controller.addProductToCartByRow(clickedRow);
            fireEditingStopped();
        });

        // Xử lý sự kiện khi nhấn nút X
        rejectButton.addActionListener(e -> {
            // Không làm gì, chỉ đơn giản hủy thao tác
            fireEditingStopped();
        });
    }

    @Override
    public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
        clickedRow = row;
        return panel;
    }

    @Override
    public Object getCellEditorValue() {
        return null;
    }
}
public void updateSupplierComboBoxes(List<Supplier> suppliers) {
    // Lấy ra ComboBox renderer từ cột 2
    TableColumn supplierColumn = ProductTable.getColumnModel().getColumn(2);
    JComboBox<Supplier> comboBox = (JComboBox<Supplier>) ((DefaultCellEditor) supplierColumn.getCellEditor()).getComponent();
    
    // Xóa tất cả item cũ
    comboBox.removeAllItems();
    
    // Thêm các nhà cung cấp mới
    for (Supplier supplier : suppliers) {
        comboBox.addItem(supplier);
    }
}
public Supplier getSelectedSupplierForRow(int row) {
    Object supplierObj = ProductTable.getValueAt(row, 2);
    if (supplierObj instanceof Supplier) {
        return (Supplier) supplierObj;
    }
    return null;
}
    


//    private void btnStockInMouseClicked(MouseEvent evt) {//GEN-FIRST:event_btnStockInMouseClicked
//        // Create an instance of PurchaseOrderController to handle the purchase order processing
//        try {
//            // Get the logged in employee (this will need to be passed from somewhere)
//            Employee currentEmployee = null; // This should be set to the actual logged-in employee
//
//            // Create controller and pass this form and the current employee
//            PurchaseOrderController controller = new PurchaseOrderController(this, currentEmployee);
//
//            // Process the purchase order
//            controller.processPurchaseOrder();
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this,
//                    "Error processing purchase order: " + e.getMessage(),
//                    "Error", JOptionPane.ERROR_MESSAGE);
//            e.printStackTrace();
//        }
//    }//GEN-LAST:event_btnStockInMouseClicked
    // Getter cho các trường TextField

    public javax.swing.JTextField getTextField2() {
        return jTextField2;
    }

    public javax.swing.JTextField getTextField4() {
        return jTextField4;
    }

    // Getter cho các bảng
    public javax.swing.JTable getJTable1() {
        return ProductTable;
    }

    public javax.swing.JTable getJTable2() {
        return SelectedProduct;
    }

    // Getter cho nút nhập kho
    public com.k33ptoo.components.KButton getBtnStockIn() {
        return btnStockIn;
    }

    // Getter cho nhãn tổng tiền
    public javax.swing.JLabel getTxtTotalPrice() {
        return txtTotalPrice;
    }
    public com.pcstore.utils.TextFieldSearch getTextFieldSearch() {
        return textFieldSearch1;
    }

    public javax.swing.JLabel getLblPurchaseOrderId(){
        return null;
    }
    public javax.swing.JLabel getLblTotalAmount() {
        return txtTotalPrice;
    }
    public javax.swing.JButton getBtnAddToCart() {
        return null; 
    }
    public javax.swing.JButton getBtnRemoveItem() {
        return null; 
    }
    public javax.swing.JButton getBtnCancel() {
        return null;
    }
    public javax.swing.JButton getBtnClear() {
        return null;
    }

    public JTable getTableProducts() {
        return ProductTable;
    }

    public JTable getTableSelectedProducts() {
        return SelectedProduct;
    }

    public JLabel getLabelTotalAmount() {
        return txtTotalPrice;
    }

    public JButton getBtnAddProduct() {
        return new JButton("Thêm"); // Tạo nút ảo nếu form không có
    }

    public JButton getBtnRemoveProduct() {
        return new JButton("Xóa"); // Tạo nút ảo nếu form không có
    }

    public JButton getBtnSave() {
        return btnStockIn;
    }
    public JComboBox<Supplier> getComboBoxSupplier() {
        TableColumn supplierColumn = ProductTable.getColumnModel().getColumn(2);
        DefaultCellEditor editor = (DefaultCellEditor) supplierColumn.getCellEditor();
        return (JComboBox<Supplier>) editor.getComponent();
    }
    
    public Supplier getSupplier() {
        JComboBox<Supplier> comboBox = getComboBoxSupplier();
        return comboBox != null ? (Supplier) comboBox.getSelectedItem() : null;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ProductTable;
    private javax.swing.JTable SelectedProduct;
    private com.k33ptoo.components.KButton btnStockIn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private com.k33ptoo.components.KGradientPanel kGradientPanel1;
    private com.pcstore.utils.TextFieldSearch textFieldSearch1;
    private javax.swing.JLabel txtTotalPrice;
    // End of variables declaration//GEN-END:variables
}
