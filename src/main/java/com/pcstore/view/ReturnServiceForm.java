/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.pcstore.view;

import com.pcstore.controller.ReturnController;
import com.pcstore.model.Return;
import com.pcstore.service.ServiceFactory;
import com.pcstore.utils.ErrorMessage;
import com.pcstore.utils.TableUtils;

import java.sql.SQLException;
import java.util.List;
import java.util.Optional;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author DUC ANH
 */
public class ReturnServiceForm extends javax.swing.JPanel {

    private ReturnController returnController;
    private DefaultTableModel tableModel;
    private final DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
    private final Map<String, String> statusTranslation;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPaneTable;
    private com.k33ptoo.components.KButton btnDetailReturnCard;
    private com.k33ptoo.components.KButton btnRemoveReturn;
    private com.k33ptoo.components.KButton btnReturnInformationLookup;
    private com.k33ptoo.components.KButton btnReturnProduct;
    private com.k33ptoo.components.KButton btnUpdateStatus;
    private javax.swing.JPanel panelBody;
    private javax.swing.JPanel pnReturnFunctions;
    private javax.swing.JPanel pnReturnMain;
    private javax.swing.JPanel pnSearch;
    private javax.swing.JTable tbReturn;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables


    /**
     * Creates new form ReturnService
     */
    public ReturnServiceForm() {
        initComponents();
        // Khởi tạo bản dịch trạng thái từ tiếng Anh sang tiếng Việt
        statusTranslation = new HashMap<>();
        statusTranslation.put("Pending", "Đang chờ xử lý");
        statusTranslation.put("Approved", "Đã phê duyệt");
        statusTranslation.put("Rejected", "Đã từ chối");
        statusTranslation.put("Completed", "Đã hoàn thành");
        
        addListeners();
        initComponentsCustom();
        initController();
        if (returnController != null) {
            returnController.setupTable(this);
            returnController.loadAllReturns(this);
        }
        
    }

    private void initController() {
        try {
            // Khởi tạo controller sử dụng ServiceFactory
            returnController = new ReturnController(
                ServiceFactory.getInstance().getConnection(),
                ServiceFactory.getInvoiceService(),
                ServiceFactory.getProductService()
            );
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, 
                ErrorMessage.DB_CONNECTION_ERROR + ": " + ex.getMessage(),
                "Lỗi kết nối", JOptionPane.ERROR_MESSAGE);
        }
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnReturnMain = new javax.swing.JPanel();
        pnReturnFunctions = new javax.swing.JPanel();
        btnReturnProduct = new com.k33ptoo.components.KButton();
        btnRemoveReturn = new com.k33ptoo.components.KButton();
        btnDetailReturnCard = new com.k33ptoo.components.KButton();
        btnUpdateStatus = new com.k33ptoo.components.KButton();
        pnSearch = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        btnReturnInformationLookup = new com.k33ptoo.components.KButton();
        panelBody = new javax.swing.JPanel();
        ScrollPaneTable = new javax.swing.JScrollPane();
        tbReturn = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1053, 713));
        setPreferredSize(new java.awt.Dimension(1153, 713));
        setLayout(new java.awt.BorderLayout());

        pnReturnMain.setBackground(new java.awt.Color(255, 255, 255));
        pnReturnMain.setLayout(new javax.swing.BoxLayout(pnReturnMain, javax.swing.BoxLayout.Y_AXIS));

        pnReturnFunctions.setBackground(new java.awt.Color(255, 255, 255));
        pnReturnFunctions.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        java.util.ResourceBundle bundle = com.pcstore.utils.LocaleManager.getInstance().getResourceBundle(); // NOI18N
        btnReturnProduct.setText(bundle.getString("btnReturnProduct")); // NOI18N
        btnReturnProduct.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnReturnProduct.setkAllowGradient(false);
        btnReturnProduct.setkBackGroundColor(new java.awt.Color(0, 190, 94));
        btnReturnProduct.setkBorderRadius(30);
        btnReturnProduct.setkEndColor(new java.awt.Color(0, 255, 51));
        btnReturnProduct.setkFocusColor(new java.awt.Color(255, 255, 255));
        btnReturnProduct.setkHoverColor(new java.awt.Color(0, 190, 94));
        btnReturnProduct.setkHoverEndColor(new java.awt.Color(102, 153, 255));
        btnReturnProduct.setkHoverForeGround(new java.awt.Color(51, 204, 255));
        btnReturnProduct.setkStartColor(new java.awt.Color(0, 204, 255));
        btnReturnProduct.setPreferredSize(new java.awt.Dimension(150, 35));
        pnReturnFunctions.add(btnReturnProduct);

        btnRemoveReturn.setText(bundle.getString("btnRemoveRepair")); // NOI18N
        btnRemoveReturn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRemoveReturn.setkAllowGradient(false);
        btnRemoveReturn.setkBackGroundColor(new java.awt.Color(255, 0, 51));
        btnRemoveReturn.setkBorderRadius(30);
        btnRemoveReturn.setkEndColor(new java.awt.Color(255, 102, 51));
        btnRemoveReturn.setkHoverColor(new java.awt.Color(255, 39, 51));
        btnRemoveReturn.setkHoverEndColor(new java.awt.Color(102, 153, 255));
        btnRemoveReturn.setkHoverForeGround(new java.awt.Color(51, 204, 255));
        btnRemoveReturn.setkStartColor(new java.awt.Color(255, 0, 51));
        btnRemoveReturn.setPreferredSize(new java.awt.Dimension(150, 35));
        btnRemoveReturn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemoveReturnMouseClicked(evt);
            }
        });
        btnRemoveReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveReturnActionPerformed(evt);
            }
        });
        pnReturnFunctions.add(btnRemoveReturn);

        btnDetailReturnCard.setText(bundle.getString("btnDetailReturnCard")); // NOI18N
        btnDetailReturnCard.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDetailReturnCard.setkAllowGradient(false);
        btnDetailReturnCard.setkBackGroundColor(new java.awt.Color(102, 153, 255));
        btnDetailReturnCard.setkEndColor(new java.awt.Color(102, 153, 255));
        btnDetailReturnCard.setkHoverColor(new java.awt.Color(102, 185, 241));
        btnDetailReturnCard.setkHoverEndColor(new java.awt.Color(102, 153, 255));
        btnDetailReturnCard.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnDetailReturnCard.setkIndicatorThickness(255);
        btnDetailReturnCard.setPreferredSize(new java.awt.Dimension(150, 35));
        pnReturnFunctions.add(btnDetailReturnCard);

        btnUpdateStatus.setText(bundle.getString("btnUpdateStatus")); // NOI18N
        btnUpdateStatus.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdateStatus.setkAllowGradient(false);
        btnUpdateStatus.setkBackGroundColor(new java.awt.Color(255, 102, 0));
        btnUpdateStatus.setkHoverColor(new java.awt.Color(255, 153, 0));
        btnUpdateStatus.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnUpdateStatus.setkShowFocusBorder(true);
        btnUpdateStatus.setPreferredSize(new java.awt.Dimension(150, 35));
        pnReturnFunctions.add(btnUpdateStatus);

        pnSearch.setBackground(new java.awt.Color(255, 255, 255));
        pnSearch.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("pnReturnSearch"))); // NOI18N

        txtSearch.setToolTipText("");
        txtSearch.setMargin(new java.awt.Insets(2, 6, 2, 0));
        txtSearch.addActionListener(e -> {
            if (returnController != null) returnController.searchReturns(this);
        });

        btnReturnInformationLookup.setText(bundle.getString("btnReturnInformationLookup")); // NOI18N
        btnReturnInformationLookup.setkBackGroundColor(new java.awt.Color(102, 153, 255));
        btnReturnInformationLookup.setkEndColor(new java.awt.Color(102, 153, 255));
        btnReturnInformationLookup.setkHoverEndColor(new java.awt.Color(102, 153, 255));
        btnReturnInformationLookup.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnReturnInformationLookup.setMargin(new java.awt.Insets(2, 14, 0, 14));

        javax.swing.GroupLayout pnSearchLayout = new javax.swing.GroupLayout(pnSearch);
        pnSearch.setLayout(pnSearchLayout);
        pnSearchLayout.setHorizontalGroup(
            pnSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReturnInformationLookup, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnSearchLayout.setVerticalGroup(
            pnSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSearchLayout.createSequentialGroup()
                .addGroup(pnSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReturnInformationLookup, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        pnReturnFunctions.add(pnSearch);

        pnReturnMain.add(pnReturnFunctions);

        panelBody.setLayout(new java.awt.BorderLayout());

        ScrollPaneTable.setAutoscrolls(true);
        ScrollPaneTable.setMaximumSize(new java.awt.Dimension(32767, 1153));

        tbReturn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Số Lượng", "Lý Do", "Ngày Đổi/Trả", "Phân Loại", "Trạng Thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ScrollPaneTable.setViewportView(tbReturn);
        if (tbReturn.getColumnModel().getColumnCount() > 0) {
            tbReturn.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("return.column.productId"));
            tbReturn.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("return.column.productName"));
            tbReturn.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("return.column.quantity"));
            tbReturn.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("return.column.reason"));
            tbReturn.getColumnModel().getColumn(4).setHeaderValue(bundle.getString("return.column.returnDate"));
            tbReturn.getColumnModel().getColumn(5).setHeaderValue(bundle.getString("return.column.category"));
            tbReturn.getColumnModel().getColumn(6).setHeaderValue(bundle.getString("return.column.status"));
            tbReturn.getTableHeader().repaint(); // Cập nhật lại giao diện header
        }

        panelBody.add(ScrollPaneTable, java.awt.BorderLayout.CENTER);

        pnReturnMain.add(panelBody);

        add(pnReturnMain, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    

    private void btnRemoveReturnMouseClicked(java.awt.event.MouseEvent evt) {
        if (returnController != null) returnController.deleteSelectedReturn(this);
    }

    private void btnRemoveReturnActionPerformed(java.awt.event.ActionEvent evt) {
        if (returnController != null) returnController.deleteSelectedReturn(this);
    }

    private void btnReturnInformationLookupActionPerformed(java.awt.event.ActionEvent evt) {
        if (returnController != null) returnController.searchReturns(this);
    }

    private void btnReturnProductActionPerformed(java.awt.event.ActionEvent evt) {
        if (returnController != null) returnController.openAddReturnForm(this);
    }

    private void btnDetailReturnCardActionPerformed(java.awt.event.ActionEvent evt) {
        if (returnController != null) returnController.showReturnDetails(this);
    }

    private void btnUpdateStatusActionPerformed(java.awt.event.ActionEvent evt) {
        if (returnController != null) {
            returnController.handleUpdateReturnStatus(this);
        }
    }

    private void addListeners() {
        btnReturnInformationLookup.addActionListener(this::btnReturnInformationLookupActionPerformed);
        btnReturnProduct.addActionListener(this::btnReturnProductActionPerformed);
        btnDetailReturnCard.addActionListener(this::btnDetailReturnCardActionPerformed);
        btnRemoveReturn.addActionListener(this::btnRemoveReturnActionPerformed);
        btnRemoveReturn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemoveReturnMouseClicked(evt);
            }
        });
        btnUpdateStatus.addActionListener(this::btnUpdateStatusActionPerformed);

        // Tìm kiếm realtime khi gõ vào ô tìm kiếm
        txtSearch.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                if (returnController != null) returnController.searchReturns(ReturnServiceForm.this);
            }
            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                if (returnController != null) returnController.searchReturns(ReturnServiceForm.this);
            }
            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                if (returnController != null) returnController.searchReturns(ReturnServiceForm.this);
            }
        });
    }

    private void initComponentsCustom() {
        initComponents();
                       
        addListeners();
    }

    public JTable getTbReturn() { return tbReturn; }
    public DefaultTableModel getTableModel() { return tableModel; }
    public Map<String, String> getStatusTranslation() { return statusTranslation; }
    public JTextField getTxtSearch() { return txtSearch; }
    public DateTimeFormatter getDateFormatter() { return dateFormatter; }
    public ReturnController getReturnController() {
        return returnController;
    }
}
