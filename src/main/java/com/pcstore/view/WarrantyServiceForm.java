/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.pcstore.view;

import com.pcstore.controller.WarrantyController;
import com.pcstore.utils.DatabaseConnection;
import com.pcstore.utils.TableStyleUtil;
import com.pcstore.repository.*;
import com.pcstore.service.*;

import java.sql.Connection;
import java.sql.SQLException;
import java.time.format.DateTimeFormatter;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

import com.pcstore.model.Warranty;
import com.pcstore.repository.impl.CustomerRepository;
import com.pcstore.repository.impl.InvoiceDetailRepository;
import com.pcstore.repository.impl.ProductRepository;
import com.pcstore.repository.impl.WarrantyRepository;

/**
 *
 * @author 
 */
public class WarrantyServiceForm extends javax.swing.JPanel {

    private WarrantyController controller;
    
    /**
     * Creates new form Service
     */
    public WarrantyServiceForm() {
        try {
            initComponents();
            initController();
            TableStyleUtil.applyDefaultStyle(tableListWarranty);
        } catch (Exception e) {
            System.err.println("Error initializing WarrantyServiceForm: " + e.getMessage());
            e.printStackTrace();
            JOptionPane.showMessageDialog(
                this,
                "Lỗi khởi tạo form: " + e.getMessage(),
                "Lỗi",
                JOptionPane.ERROR_MESSAGE
            );
        }
    }
    
    /**
     * Khởi tạo controller và tải dữ liệu ban đầu
     */
    private void initController() {
        try {
            // Khởi tạo controller với các service cần thiết
            controller = new WarrantyController(
                ServiceFactory.getWarrantyService(),
                ServiceFactory.getInvoiceService(),
                ServiceFactory.getInvoiceDetailService(),
                ServiceFactory.getProductService(),
                ServiceFactory.getCustomerService()
            );
            
            // Thiết lập form và tải dữ liệu
            controller.setServiceForm(this);
            controller.loadWarranties(); // Tải dữ liệu khi khởi tạo
        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                this,
                "Lỗi khởi tạo controller: " + e.getMessage(),
                "Lỗi",
                JOptionPane.ERROR_MESSAGE
            );
            e.printStackTrace();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnWarrantyMain = new javax.swing.JPanel();
        pnFunctions = new javax.swing.JPanel();
        btnWarrantyRegistration = new com.k33ptoo.components.KButton();
        btnRemoveRepair = new com.k33ptoo.components.KButton();
        btnDetailWarrantyCard = new com.k33ptoo.components.KButton();
        jPanel3 = new javax.swing.JPanel();
        btnWarrantyInformationLookup = new com.k33ptoo.components.KButton();
        jTextField1 = new javax.swing.JTextField();
        panelBody = new javax.swing.JPanel();
        jScrollPaneTable = new javax.swing.JScrollPane();
        tableListWarranty = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1153, 713));
        setMinimumSize(new java.awt.Dimension(1153, 713));
        setPreferredSize(new java.awt.Dimension(1153, 713));
        setLayout(new java.awt.BorderLayout());

        pnWarrantyMain.setBackground(new java.awt.Color(255, 255, 255));
        pnWarrantyMain.setMaximumSize(new java.awt.Dimension(1360, 600));
        pnWarrantyMain.setMinimumSize(new java.awt.Dimension(1360, 600));
        pnWarrantyMain.setPreferredSize(new java.awt.Dimension(1360, 600));
        pnWarrantyMain.setLayout(new javax.swing.BoxLayout(pnWarrantyMain, javax.swing.BoxLayout.Y_AXIS));

        pnFunctions.setBackground(new java.awt.Color(255, 255, 255));
        pnFunctions.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 20, 10));

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/pcstore/resources/vi_VN"); // NOI18N
        btnWarrantyRegistration.setText(bundle.getString("btnReturnProduct")); // NOI18N
        btnWarrantyRegistration.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnWarrantyRegistration.setkAllowGradient(false);
        btnWarrantyRegistration.setkBackGroundColor(new java.awt.Color(0, 190, 94));
        btnWarrantyRegistration.setkBorderRadius(30);
        btnWarrantyRegistration.setkEndColor(new java.awt.Color(0, 255, 51));
        btnWarrantyRegistration.setkFocusColor(new java.awt.Color(255, 255, 255));
        btnWarrantyRegistration.setkHoverColor(new java.awt.Color(0, 190, 94));
        btnWarrantyRegistration.setkHoverEndColor(new java.awt.Color(102, 153, 255));
        btnWarrantyRegistration.setkHoverForeGround(new java.awt.Color(50, 100, 255));
        btnWarrantyRegistration.setkStartColor(new java.awt.Color(0, 204, 255));
        btnWarrantyRegistration.setPreferredSize(new java.awt.Dimension(150, 35));
        btnWarrantyRegistration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWarrantyRegistrationActionPerformed(evt);
            }
        });
        pnFunctions.add(btnWarrantyRegistration);

        btnRemoveRepair.setText(bundle.getString("btnRemoveRepair")); // NOI18N
        btnRemoveRepair.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRemoveRepair.setkAllowGradient(false);
        btnRemoveRepair.setkBackGroundColor(new java.awt.Color(255, 0, 51));
        btnRemoveRepair.setkBorderRadius(30);
        btnRemoveRepair.setkEndColor(new java.awt.Color(255, 102, 51));
        btnRemoveRepair.setkHoverColor(new java.awt.Color(255, 39, 51));
        btnRemoveRepair.setkHoverEndColor(new java.awt.Color(102, 153, 255));
        btnRemoveRepair.setkHoverForeGround(new java.awt.Color(50, 100, 255));
        btnRemoveRepair.setkStartColor(new java.awt.Color(255, 0, 51));
        btnRemoveRepair.setPreferredSize(new java.awt.Dimension(150, 35));
        btnRemoveRepair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemoveRepairMouseClicked(evt);
            }
        });
        btnRemoveRepair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveRepairActionPerformed(evt);
            }
        });
        pnFunctions.add(btnRemoveRepair);

        btnDetailWarrantyCard.setText(bundle.getString("btnDetailReturnCard")); // NOI18N
        btnDetailWarrantyCard.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDetailWarrantyCard.setkAllowGradient(false);
        btnDetailWarrantyCard.setkBackGroundColor(new java.awt.Color(102, 153, 255));
        btnDetailWarrantyCard.setkEndColor(new java.awt.Color(102, 153, 255));
        btnDetailWarrantyCard.setkHoverColor(new java.awt.Color(102, 185, 241));
        btnDetailWarrantyCard.setkHoverEndColor(new java.awt.Color(102, 153, 255));
        btnDetailWarrantyCard.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnDetailWarrantyCard.setkIndicatorThickness(255);
        btnDetailWarrantyCard.setPreferredSize(new java.awt.Dimension(150, 35));
        btnDetailWarrantyCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailWarrantyCardActionPerformed(evt);
            }
        });
        pnFunctions.add(btnDetailWarrantyCard);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm Kiếm"));
        jPanel3.setPreferredSize(new java.awt.Dimension(425, 65));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnWarrantyInformationLookup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pcstore/resources/icon/search.png"))); // NOI18N
        btnWarrantyInformationLookup.setDisabledSelectedIcon(null);
        btnWarrantyInformationLookup.setEnabled(false);
        btnWarrantyInformationLookup.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnWarrantyInformationLookup.setIconTextGap(25);
        btnWarrantyInformationLookup.setkBackGroundColor(new java.awt.Color(102, 153, 255));
        btnWarrantyInformationLookup.setkBorderRadius(30);
        btnWarrantyInformationLookup.setkEndColor(new java.awt.Color(153, 153, 153));
        btnWarrantyInformationLookup.setkHoverEndColor(new java.awt.Color(102, 153, 255));
        btnWarrantyInformationLookup.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnWarrantyInformationLookup.setkStartColor(new java.awt.Color(204, 204, 204));
        btnWarrantyInformationLookup.setMargin(new java.awt.Insets(2, 14, 0, 14));
        btnWarrantyInformationLookup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWarrantyInformationLookupActionPerformed(evt);
            }
        });
        jPanel3.add(btnWarrantyInformationLookup, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 70, 32));

        jTextField1.setMargin(new java.awt.Insets(2, 6, 2, 0));
        jPanel3.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 310, 30));

        pnFunctions.add(jPanel3);

        pnWarrantyMain.add(pnFunctions);

        panelBody.setLayout(new java.awt.BorderLayout());

        jScrollPaneTable.setPreferredSize(new java.awt.Dimension(452, 500));

        tableListWarranty.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Bảo Hành ", "Ngày Yêu Cầu", "Mã Khách Hàng", "Tên Khách Hàng", "Số Điện Thoại", "Tên sản Phẩm ", "Mã Sản Phẩm", "Tình Trạng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneTable.setViewportView(tableListWarranty);

        panelBody.add(jScrollPaneTable, java.awt.BorderLayout.CENTER);

        pnWarrantyMain.add(panelBody);

        add(pnWarrantyMain, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnWarrantyRegistrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWarrantyRegistrationActionPerformed
        try {
            // Kiểm tra controller
            if (controller == null) {
                javax.swing.JOptionPane.showMessageDialog(this,
                    "Controller chưa được khởi tạo.",
                    "Lỗi",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Tạo dialog mới
            javax.swing.JDialog dialog = new javax.swing.JDialog();
            dialog.setTitle("Đăng ký bảo hành mới");
            dialog.setModal(true);
            dialog.setSize(980, 650);
            dialog.setLocationRelativeTo(this);
            
            // Tạo form đăng ký bảo hành và thêm vào dialog
            AddWarrantyForm addWarrantyForm = new AddWarrantyForm(controller);
            dialog.add(addWarrantyForm);
            
            // Hiển thị dialog
            dialog.setVisible(true);
            
            // Sau khi dialog đóng, cập nhật lại danh sách bảo hành
            controller.loadWarranties();
            
        } catch (Exception e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this,
                "Lỗi khi mở form đăng ký bảo hành: " + e.getMessage(),
                "Lỗi",
                javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnWarrantyRegistrationActionPerformed

    private void btnRemoveRepairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveRepairMouseClicked
        // Gọi phương thức xử lý sự kiện action để tránh lặp code
        btnRemoveRepairActionPerformed(null);
    }//GEN-LAST:event_btnRemoveRepairMouseClicked

    private void btnRemoveRepairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveRepairActionPerformed
    try {
        // Kiểm tra xem có hàng nào được chọn không
        int selectedRow = tableListWarranty.getSelectedRow();
        if (selectedRow == -1) {
            javax.swing.JOptionPane.showMessageDialog(this,
                "Vui lòng chọn một bảo hành để xóa.",
                "Thông báo",
                javax.swing.JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        // Lấy ID của bảo hành được chọn dưới dạng chuỗi
        Object warrantyIdObj = tableListWarranty.getValueAt(selectedRow, 0);
        if (warrantyIdObj == null || warrantyIdObj.toString().isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this,
                "Bảo hành không có ID hợp lệ.",
                "Lỗi",
                javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Sử dụng ID bảo hành dưới dạng chuỗi
        String warrantyId = warrantyIdObj.toString();

        // Kiểm tra controller
        if (controller == null) {
            javax.swing.JOptionPane.showMessageDialog(this,
                "Controller chưa được khởi tạo.",
                "Lỗi",
                javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Xác nhận trước khi xóa
        int choice = javax.swing.JOptionPane.showConfirmDialog(this,
            "Bạn có chắc chắn muốn xóa bảo hành này không?",
            "Xác nhận xóa",
            javax.swing.JOptionPane.YES_NO_OPTION,
            javax.swing.JOptionPane.WARNING_MESSAGE);

        if (choice != javax.swing.JOptionPane.YES_OPTION) {
            return; // Người dùng đã hủy việc xóa
        }

        // Tiến hành xóa bảo hành với ID dạng chuỗi
        boolean success = controller.deleteWarranty(warrantyId);

        if (success) {
            // Hiển thị thông báo thành công
            javax.swing.JOptionPane.showMessageDialog(this,
                "Đã xóa bảo hành thành công!",
                "Thành công",
                javax.swing.JOptionPane.INFORMATION_MESSAGE);

            // Cập nhật lại bảng
            controller.loadWarranties();
        } else {
            javax.swing.JOptionPane.showMessageDialog(this,
                "Không thể xóa bảo hành. Vui lòng thử lại sau.",
                "Lỗi",
                javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    } catch (Exception e) {

    }
}//GEN-LAST:event_btnRemoveRepairActionPerformed

    private void btnDetailWarrantyCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailWarrantyCardActionPerformed
        if (controller != null) {
            int selectedRow = tableListWarranty.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(
                    this,
                    "Vui lòng chọn một bảo hành để xem chi tiết",
                    "Chưa Chọn",
                    JOptionPane.WARNING_MESSAGE
                );
                return;
            }
            
            // Lấy mã bảo hành từ dòng đã chọn
            String warrantyId = tableListWarranty.getValueAt(selectedRow, 0).toString();
            controller.viewWarrantyDetail(warrantyId);
        }
    }//GEN-LAST:event_btnDetailWarrantyCardActionPerformed

    private void btnWarrantyInformationLookupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWarrantyInformationLookupActionPerformed
        if (controller != null) {
            String keyword = jTextField1.getText().trim();
            controller.searchWarranties(keyword);
        }
    }//GEN-LAST:event_btnWarrantyInformationLookupActionPerformed
   
    

    /**
     * Cập nhật dữ liệu bảng bảo hành từ danh sách
     * @param warranties Danh sách bảo hành để hiển thị
     */
    public void updateWarrantyTable(List<Warranty> warranties) {
        // System.out.println("Updating warranty table with " + (warranties != null ? warranties.size() : 0) + " items");
        
        DefaultTableModel model = (DefaultTableModel) tableListWarranty.getModel();
        model.setRowCount(0); // Xóa tất cả các hàng hiện có
        
        if (warranties == null || warranties.isEmpty()) {
            JOptionPane.showMessageDialog(
                this,
                "Không có dữ liệu bảo hành nào để hiển thị.",
                "Thông báo",
                JOptionPane.INFORMATION_MESSAGE
            );
            return;
        }
        
        // Định dạng ngày tháng
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        
        // Thêm dữ liệu từ danh sách bảo hành
        for (Warranty warranty : warranties) {
            try {
                
                String startDateStr = warranty.getStartDate() != null ? 
                    warranty.getStartDate().format(formatter) : "";
                    
                model.addRow(new Object[]{
                    warranty.getWarrantyId(),
                    startDateStr,
                    warranty.getCustomerId(),
                    warranty.getCustomerName(),
                    warranty.getCustomerPhone(),
                    warranty.getProductName(),
                    warranty.getProductId(),
                    warranty.isUsed() ? "Đã sử dụng" : "Chưa sử dụng"
                });
            } catch (Exception e) {
                System.err.println("Error adding warranty to table: " + e.getMessage());
                e.printStackTrace();
            }
        }
        
        // System.out.println("Table updated with " + model.getRowCount() + " rows");
    }

    /**
     * Xóa tất cả dữ liệu trong bảng
     */
    public void clearWarrantyTable() {
        DefaultTableModel model = (DefaultTableModel) tableListWarranty.getModel();
        model.setRowCount(0);
    }

    /**
     * Trả về bảng hiển thị danh sách bảo hành
     * @return Bảng bảo hành
     */
    public JTable getWarrantyTable() {
        return tableListWarranty;
    }

    /**
     * Trả về trường nhập từ khóa tìm kiếm
     * @return Trường tìm kiếm
     */
    public JTextField getSearchField() {
        return jTextField1;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.k33ptoo.components.KButton btnDetailWarrantyCard;
    private com.k33ptoo.components.KButton btnRemoveRepair;
    private com.k33ptoo.components.KButton btnWarrantyInformationLookup;
    private com.k33ptoo.components.KButton btnWarrantyRegistration;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPaneTable;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel panelBody;
    private javax.swing.JPanel pnFunctions;
    private javax.swing.JPanel pnWarrantyMain;
    private javax.swing.JTable tableListWarranty;
    // End of variables declaration//GEN-END:variables
}
